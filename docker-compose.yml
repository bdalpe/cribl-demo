version: "3.5"
services:
  cribl:
    build:
      context: cribl
    ports:
      - 9000:9000
    volumes:
      - ./cribl/master/groups:/opt/cribl/groups
      - ./cribl/master/local:/opt/cribl/local
      - ./cribl/scripts:/opt/cribl/scripts
    environment:
      - CRIBL_HOME=/opt/cribl
      - CRIBL_AFTER_START_CMD_1=sleep 60 && $CRIBL_HOME/demo-scripts/cli-deploy
  cribl-w0:
    build:
      context: cribl
    ports:
      - 9002:9000
      - 10200:10200
      - 10088:10088
      - 10080:10080
      - 10001:10001
      - 9999:9999
      - 3514:3514
      - 5140:5140
    environment:
      - CRIBL_DIST_MASTER_URL=tcp://criblmaster@cribl:4200?tag=logs
  cribl-w1:
    build:
      context: cribl
    ports:
      - 9003:9000
      - 8125:8125
      - 8125:8125/udp
    environment:
      - CRIBL_DIST_MASTER_URL=tcp://criblmaster@cribl:4200?tag=metrics
  gogen-businessevent-hec:
    build:
      context: gogen-businessevent-hec
    command: start
    environment:
      - CRIBL_HEC
  gogen-accesscombined-forwarder:
    build:
      context: universalforwarder
    environment:
      - SPLUNK_CMD=cmd mkdir -p /var/log/httpd
      - SPLUNK_CMD_1=cmd gogen -v -cd /etc/gogen -o file --filename
        /var/log/httpd/access_log -lj gen -s shoppingapache 2>/var/log/gogen.log
        &
      - SPLUNK_CMD_2=add monitor /var/log/httpd/access_log -auth admin:cribldemo
        -sourcetype access_combined -index cribl
      - SPLUNK_CMD_3=add forward-server ${CRIBL_SPLUNK} -auth admin:cribldemo
        ${CRIBL_SPLUNK_ARGS}
  gogen-authfailed-filebeat:
    build:
      context: filebeat
    volumes:
      - ${DOCKER_LIB_CONTAINERS:-/var/lib/docker/containers}:/var/lib/docker/containers
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - CRIBL_ELASTIC
  gogen-statechange-syslog:
    build:
      context: gogen-statechange-syslog
    command: start
    environment:
      - CRIBL_SYSLOG
  gogen-bigjson-kafka:
    build:
      context: gogen-bigjson-kafka
    command: start
    environment:
      - CRIBL_KAFKA
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS: "true"
  gogen-metrics-dogstatsd:
    build:
      context: gogen-metrics-dogstatsd
    command: start
    environment:
      - CRIBL_STATSD
  gogen-pantraffic-syslog:
    build:
      context: gogen-pantraffic-syslog
    command: start
    environment:
      - CRIBL_SYSLOG
  cribl-sa:
    build:
      context: cribl
    ports:
      - 9005:9000
    volumes:
      - ./cribl/sa-local:/opt/cribl/local
    environment:
      - CRIBL_HOME=/opt/cribl
      - CRIBL_AFTER_START_CMD_1=sleep 60 && $CRIBL_HOME/demo-scripts/cli-deploy
  gogen-datacollection-syslog:
    build:
      context: gogen-datacollection-syslog
    command: start
    environment:
      - CRIBL_SA_SYSLOG
  splunk:
    build:
      context: splunk
    ports:
      - 8000:8000
      - 8088:8088
      - 8089:8089
      - 9997:9997
    environment:
      - DONT_TIMEOUT=1
      - CRIBL_ROUTING_DEMO=1
  apiserver:
    build:
      context: apiserver
    volumes:
      - ./data:/opt/data
    ports:
      - 3000:3000
    restart: always
    ulimits:
      nofile:
        soft: 512
        hard: 1024
    healthcheck:
      test: curl --fail -s http://localhost:3000/ || exit 1
      interval: 15s
      timeout: 10s
      retries: 3
    privileged: true
    environment:
      DISABLE_ACCESS_COUNT: 1
  redis:
    build:
      context: redis
    ports:
      - 6379:6379
  influxdb:
    image: influxdb:1.7
    environment:
      - INFLUXDB_DB=cribl
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_PASSWORD=admin
    ports:
      - 8086:8086
    volumes:
      - influxdb:/var/lib/influxdb
  grafana:
    image: grafana/grafana
    ports:
      - 8200:3000
    volumes:
      - ./grafana:/etc/grafana/provisioning
      - grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=cribldemo
  telegraf:
    image: telegraf:latest
    volumes:
      - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - CRIBL_STATSD
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus/:/etc/prometheus/
    ports:
      - 9090:9090
  minio:
    image: minio/minio:latest
    environment:
      - MINIO_ACCESS_KEY=ACCESSKEY
      - MINIO_SECRET_KEY=SECRETKEY
    ports:
      - 9001:9000
    volumes:
      - ./minio:/data
    command: server /data
volumes:
  ? grafana
  ? influxdb
